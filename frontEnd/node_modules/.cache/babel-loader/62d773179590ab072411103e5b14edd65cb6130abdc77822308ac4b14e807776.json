{"ast":null,"code":"var _jsxFileName = \"/Users/shamethakg/Documents/bondMatchPlus/frontEnd/src/components/discoverPage/BondSplitVisual.js\";\n// src/components/auctionPage/BondSplitVisualization.js\nimport React from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function BondSplitVisualization({\n  totalLots = 2000,\n  lotSize = 25000,\n  highlighted = 1\n}) {\n  // Show ~50 representative tiles instead of all 2000\n  const displayTiles = 50;\n  const lotsPerTile = Math.ceil(totalLots / displayTiles);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bg-white rounded-xl shadow-sm p-6 mt-6\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-lg font-semibold mb-2\",\n      children: \"How this bond is divided\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"text-gray-600 text-sm mb-4\",\n      children: [\"Total size split into \", totalLots.toLocaleString(), \" micro-lots (\\u20B9\", lotSize.toLocaleString(), \" each). Each tile represents ~\", lotsPerTile.toLocaleString(), \" micro-lots.\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"grid grid-cols-10 gap-1\",\n      children: Array.from({\n        length: displayTiles\n      }).map((_, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `h-4 rounded-sm ${i === highlighted ? \"bg-teal-600\" : \"bg-teal-100 hover:bg-teal-200 transition\"}`,\n        title: i === highlighted ? `ðŸ‘‰ Your allocation (~${lotsPerTile} micro-lots)` : `~${lotsPerTile} micro-lots`\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this);\n}\n_c = BondSplitVisualization;\nvar _c;\n$RefreshReg$(_c, \"BondSplitVisualization\");","map":{"version":3,"names":["React","jsxDEV","_jsxDEV","BondSplitVisualization","totalLots","lotSize","highlighted","displayTiles","lotsPerTile","Math","ceil","className","children","fileName","_jsxFileName","lineNumber","columnNumber","toLocaleString","Array","from","length","map","_","i","title","_c","$RefreshReg$"],"sources":["/Users/shamethakg/Documents/bondMatchPlus/frontEnd/src/components/discoverPage/BondSplitVisual.js"],"sourcesContent":["// src/components/auctionPage/BondSplitVisualization.js\nimport React from \"react\";\n\nexport default function BondSplitVisualization({\n  totalLots = 2000,\n  lotSize = 25000,\n  highlighted = 1,\n}) {\n  // Show ~50 representative tiles instead of all 2000\n  const displayTiles = 50;\n  const lotsPerTile = Math.ceil(totalLots / displayTiles);\n\n  return (\n    <div className=\"bg-white rounded-xl shadow-sm p-6 mt-6\">\n      <h2 className=\"text-lg font-semibold mb-2\">How this bond is divided</h2>\n      <p className=\"text-gray-600 text-sm mb-4\">\n        Total size split into {totalLots.toLocaleString()} micro-lots (â‚¹\n        {lotSize.toLocaleString()} each). Each tile represents ~\n        {lotsPerTile.toLocaleString()} micro-lots.\n      </p>\n\n      {/* Grid of micro-lot tiles */}\n      <div className=\"grid grid-cols-10 gap-1\">\n        {Array.from({ length: displayTiles }).map((_, i) => (\n          <div\n            key={i}\n            className={`h-4 rounded-sm ${\n              i === highlighted\n                ? \"bg-teal-600\"\n                : \"bg-teal-100 hover:bg-teal-200 transition\"\n            }`}\n            title={\n              i === highlighted\n                ? `ðŸ‘‰ Your allocation (~${lotsPerTile} micro-lots)`\n                : `~${lotsPerTile} micro-lots`\n            }\n          />\n        ))}\n      </div>\n    </div>\n  );\n}\n"],"mappings":";AAAA;AACA,OAAOA,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,eAAe,SAASC,sBAAsBA,CAAC;EAC7CC,SAAS,GAAG,IAAI;EAChBC,OAAO,GAAG,KAAK;EACfC,WAAW,GAAG;AAChB,CAAC,EAAE;EACD;EACA,MAAMC,YAAY,GAAG,EAAE;EACvB,MAAMC,WAAW,GAAGC,IAAI,CAACC,IAAI,CAACN,SAAS,GAAGG,YAAY,CAAC;EAEvD,oBACEL,OAAA;IAAKS,SAAS,EAAC,wCAAwC;IAAAC,QAAA,gBACrDV,OAAA;MAAIS,SAAS,EAAC,4BAA4B;MAAAC,QAAA,EAAC;IAAwB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACxEd,OAAA;MAAGS,SAAS,EAAC,4BAA4B;MAAAC,QAAA,GAAC,wBAClB,EAACR,SAAS,CAACa,cAAc,CAAC,CAAC,EAAC,qBAClD,EAACZ,OAAO,CAACY,cAAc,CAAC,CAAC,EAAC,gCAC1B,EAACT,WAAW,CAACS,cAAc,CAAC,CAAC,EAAC,cAChC;IAAA;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,eAGJd,OAAA;MAAKS,SAAS,EAAC,yBAAyB;MAAAC,QAAA,EACrCM,KAAK,CAACC,IAAI,CAAC;QAAEC,MAAM,EAAEb;MAAa,CAAC,CAAC,CAACc,GAAG,CAAC,CAACC,CAAC,EAAEC,CAAC,kBAC7CrB,OAAA;QAEES,SAAS,EAAE,kBACTY,CAAC,KAAKjB,WAAW,GACb,aAAa,GACb,0CAA0C,EAC7C;QACHkB,KAAK,EACHD,CAAC,KAAKjB,WAAW,GACb,wBAAwBE,WAAW,cAAc,GACjD,IAAIA,WAAW;MACpB,GAVIe,CAAC;QAAAV,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAWP,CACF;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAACS,EAAA,GAtCuBtB,sBAAsB;AAAA,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}